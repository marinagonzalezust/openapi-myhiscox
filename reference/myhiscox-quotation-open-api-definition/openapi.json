{
  "swagger": "2.0",
  "info": {
    "title": "Myhiscox Quotation Open API definition",
    "version": "1.0",
    "contact": {
      "name": "Hiscox"
    },
    "description": "Start policy creation API\n"
  },
  "host": "localhost:3000",
  "schemes": [
    "http"
  ],
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "paths": {
    "/cover-data/{projectId}": {
      "get": {
        "summary": "Get cover-data based on projectId por product-variants",
        "tags": [
          "cover-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./models/coverdata.v1.json"
            }
          }
        },
        "security": [
          {
            "API Key - 1": []
          }
        ],
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Accept Language"
          },
          {
            "type": "string",
            "in": "header",
            "name": "email",
            "description": "Broker email",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "./models/productvariant.v1.json"
              }
            }
          },
          {
            "type": "string",
            "in": "query",
            "name": "product.variants"
          }
        ],
        "description": "Getting cover data based on risk data info",
        "operationId": 4.1
      },
      "parameters": [
        {
          "type": "integer",
          "name": "projectId",
          "in": "path",
          "required": true,
          "description": "retrieve cover data based on projectId"
        }
      ],
      "post": {
        "summary": "",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "projectId": {
                  "type": "integer"
                },
                "status": {
                  "type": "string"
                }
              }
            }
          }
        },
        "description": "Store cover data",
        "security": [
          {
            "API Key - 1": []
          }
        ],
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Accept Language"
          },
          {
            "type": "string",
            "in": "header",
            "name": "emal",
            "description": "broker email",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "projectId": {
                  "type": "integer"
                },
                "coverData": {
                  "$ref": "./models/coverdata.v1.json"
                }
              }
            }
          }
        ],
        "tags": [
          "cover-data"
        ],
        "operationId": 4.2
      }
    },
    "/v1/risk-data/{projectId}": {
      "get": {
        "summary": "Get risk-data based on projectId or product-variants",
        "tags": [
          "risk-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./models/riskdata.v1.json"
            }
          },
          "401": {
            "description": "Unauthorized, invalid token or email",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "description": "GET\n\nRetrieve disk-data based on list of product variantas, [also for existing project Id]",
        "security": [
          {
            "API Key - 1": []
          }
        ],
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Accept Language"
          },
          {
            "type": "string",
            "in": "header",
            "name": "email",
            "required": true
          },
          {
            "type": "array",
            "in": "query",
            "name": "product-variants"
          }
        ],
        "operationId": 3.1
      },
      "parameters": [
        {
          "type": "integer",
          "name": "projectId",
          "in": "path",
          "required": true,
          "description": "retrieve risk-data based on productId"
        }
      ],
      "post": {
        "summary": "",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "projectId": {
                  "type": "integer"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized, invalid token or email",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "security": [
          {
            "API Key - 1": []
          }
        ],
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Accept Language"
          },
          {
            "type": "string",
            "in": "header",
            "name": "email",
            "description": "Broker email",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "./models/riskdata.v1.json"
            },
            "description": ""
          }
        ],
        "description": "POST\n\nStore question answers for risk data",
        "tags": [
          "risk-data"
        ],
        "operationId": 3.2
      }
    },
    "v1/business-area/{areaId}": {
      "post": {
        "summary": "Business area to start new project quotation",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "projectId": {
                  "type": "integer"
                }
              }
            },
            "examples": {
              "example-1": {}
            }
          },
          "401": {
            "description": "Unauthorized, invalid token or email",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "description": "POST\n\nStart new quotation process with business area.\n  1 Read Area Id parameter.\n  2 For v.1 of this endpoint, areaId = 1 or 'PSC' (if string locate id in business area entity (1))\n  3.Create new Project entitiy and set:\n    3.1 business area to value 1 PSC\n    3.2 id_user based on broker email in header request objet\n    3.3 id_state to value 1 - Draft \n    3.4 id_screen to value 4 - Risk-data.\n    3.5 createdAt date to current day\n    3.6 Update API flag in project created\n    3.7 Return ProjectId created\n  3. Otherwise \n    3.1 Return error if not exist area\n    3.2 Return error by inserting project\n",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "./models/area.v1.json"
            },
            "description": "Area Object in request body. PSC or APC (future)"
          },
          {
            "type": "string",
            "in": "header",
            "name": "Accept-Language",
            "description": ""
          },
          {
            "type": "string",
            "in": "header",
            "name": "email",
            "description": "broker email",
            "required": true
          }
        ],
        "tags": [
          "quotation"
        ],
        "operationId": 1
      },
      "parameters": [
        {
          "type": "integer",
          "name": "areaId",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get Business Areas",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "./models/area.v1.json"
              }
            }
          },
          "401": {
            "description": "Unauthorized, invalid token or email",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "description": "GET\n\nRetieve business areas\n  1. If areaId not present return list of array for business areas DTO\n  2. If areaId is present retrieve array of items related to parameter business area",
        "security": [
          {
            "API Key - 1": []
          }
        ],
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Accept-Language"
          },
          {
            "type": "string",
            "in": "header",
            "name": "email",
            "description": "broker email"
          }
        ]
      }
    },
    "/policy-summary/{projectId}": {
      "get": {
        "summary": "Get policy summary information",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./models/policysummary.v1.json"
            }
          }
        },
        "security": [
          {
            "API Key - 1": []
          }
        ],
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Accept language"
          },
          {
            "type": "string",
            "in": "header",
            "name": "email",
            "description": "broker email",
            "required": true
          }
        ],
        "tags": [
          "policy-summary"
        ],
        "description": "GET\n\nGet Policy Summary Info",
        "operationId": 5.1
      },
      "post": {
        "summary": "",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "projectId": {
                  "type": "integer"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key - 1": []
          }
        ],
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Accept Language",
            "description": "API Language\n"
          },
          {
            "type": "string",
            "in": "header",
            "name": "email",
            "description": "broker email",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "./models/policysummary.v1.json"
            }
          }
        ],
        "tags": [
          "policy-summary"
        ],
        "description": "POST\n\nPost Policy Summary Info",
        "operationId": 5.2
      },
      "parameters": [
        {
          "type": "integer",
          "name": "projectId",
          "in": "path",
          "required": true
        }
      ]
    },
    "/customer-info/{projectId}": {
      "get": {
        "summary": "Get customer and policy holder info",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./models/customerdata.v1.json"
            }
          }
        },
        "security": [
          {
            "API Key - 1": []
          }
        ],
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Accept-Language"
          },
          {
            "type": "string",
            "in": "header",
            "name": "email",
            "description": "broker"
          }
        ],
        "description": "GET\n\nget policy holder info"
      },
      "post": {
        "summary": "",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "projectId": {
                  "type": "integer"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "./models/customerdata.v1.json"
            }
          }
        ],
        "description": "POST\n\npost policy holder info"
      },
      "parameters": [
        {
          "type": "integer",
          "name": "projectId",
          "in": "path",
          "required": true
        }
      ]
    },
    "/budget-document": {
      "get": {
        "summary": "Get budget pdf",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "file": {
                  "type": [
                    "string",
                    "object"
                  ]
                }
              }
            }
          }
        },
        "description": "Getting budget PDF created in server ",
        "security": [
          {
            "API Key - 1": []
          }
        ],
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Accept-Language"
          },
          {
            "type": "string",
            "in": "header",
            "name": "email",
            "description": ""
          }
        ]
      }
    },
    "/v1/sectors-activities/{projectId}": {
      "get": {
        "summary": "Get project sectors and activities",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "./models/sector.v1.json"
              }
            }
          },
          "401": {
            "description": "Unauthorized, invalid token or email",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "security": [
          {
            "API Key - 1": []
          }
        ],
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Accept-Language",
            "description": ""
          },
          {
            "type": "string",
            "in": "header",
            "name": "email",
            "description": "broker email",
            "required": true
          }
        ],
        "description": "GET\n\nGet sectors and activities based on projectId Area"
      },
      "parameters": [
        {
          "type": "integer",
          "name": "projectId",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "summary": "POST project activity sector",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "./models/activity.v1.json"
            },
            "description": "Activity DTO\n -- activityId\n -- sectorId"
          }
        ],
        "description": "POST \n\nFind projectId and update activity project based on JSON request DTO\n\nIF project updated with activity\n  return list of prouct variants associated to data stored in project:\n     - sector / activity",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "projectId": {
                  "type": "integer"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized, invalid token or email",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        }
      }
    },
    "/v1/product-variants/activity/{projectId}": {
      "get": {
        "summary": "Get product variants based on projectId Activity",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "./models/productvariant.v1.json"
              }
            }
          },
          "401": {
            "description": "Unauthorized, invalid token or email",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "description": "GET\n\nObtaing produc variants based based on projectId, sector activities.",
        "security": [
          {
            "API Key - 1": []
          }
        ],
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Accept-Language"
          },
          {
            "type": "string",
            "in": "header",
            "name": "email",
            "description": "broker email"
          }
        ]
      },
      "parameters": [
        {
          "type": "integer",
          "name": "projectId",
          "in": "path",
          "required": true
        }
      ]
    }
  },
  "definitions": {},
  "securityDefinitions": {
    "API Key - 1": {
      "name": "API Key",
      "type": "apiKey",
      "in": "query",
      "description": "X-API-KEY"
    }
  }
}