{
  "swagger": "2.0",
  "info": {
    "title": "Myhiscox Quotation Open API definition",
    "version": "1.0",
    "contact": {
      "name": "Hiscox"
    },
    "description": "Start policy creation API\n"
  },
  "host": "localhost:3000",
  "schemes": [
    "https"
  ],
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "paths": {
    "/v1/quotation/project/{id}/product-variants": {
      "post": {
        "summary": "Create product variants per project",
        "tags": [],
        "responses": {
          "201": {
            "description": "Created list of Project has Product Variants",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "description": "POST\n\nFind Project based on project JSON request Body parameter DTO\nIf project exist\n  foreach element in list of product variants --> exists in BrokerageHasProductVariant\n    Insert element in ProjectHasProductVariant entity\n  Return project Id updated",
        "security": [
          {
            "API Key - 1": []
          }
        ],
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Accept-Language"
          },
          {
            "type": "string",
            "in": "header",
            "name": "email",
            "description": "broker email",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "description": "Array of product variants Ids"
          }
        ]
      },
      "parameters": [
        {
          "type": "string",
          "name": "id",
          "in": "path",
          "required": true,
          "description": "projectId"
        }
      ],
      "get": {
        "summary": "Get project product variants",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "./models/productvariant.v1.json"
              }
            }
          }
        },
        "description": "GET\n\nFind Project based on projectid query parameter\nIf project exist \n Obtaing produc variants located in projectHasProductVariant entity and also\n in entity BrokerageHasProductVariant based on broker email",
        "security": [
          {
            "API Key - 1": []
          }
        ],
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Accept-Language"
          },
          {
            "type": "string",
            "in": "header",
            "name": "email",
            "description": "broker email",
            "required": true
          }
        ],
        "tags": [
          "variants"
        ]
      }
    },
    "/v1/quotation/project/{id}": {
      "get": {
        "summary": "Get quotation consolidate information",
        "tags": [
          "core"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./models/apiquotationobject.v1.json"
            }
          }
        },
        "security": [
          {
            "API Key - 1": []
          }
        ],
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Accept-Language"
          },
          {
            "type": "string",
            "in": "header",
            "name": "email",
            "description": "broker email",
            "required": true
          },
          {
            "type": "integer",
            "in": "query",
            "name": "projectId",
            "description": "",
            "required": true
          }
        ],
        "description": "GET\n\nMain Core Quotation consolidation GetEndpoint\nGet quote consolidate information based on project Id\nIntegrate GET request in one endpoint to obtain quotation\n\n- GET /quotation/project/{projectId}/business-areas/\n- GET /quotation/project/{projectId}/sectors-activities/\n- GET /quotation/project/{projectId}/product-variants/\n- GET /quotation/project/{projectId}/risk-data            \n- GET /quotation/project/{projectId}/cover-data/\n- GET /quotation/project/{projectId}/premium/\n- GET /quotation/project/{projectId}/customer-info/\n- GET /quotation/project/{projectId}/period/"
      },
      "parameters": [
        {
          "type": "integer",
          "name": "id",
          "in": "path",
          "required": true,
          "description": "projectId"
        }
      ]
    },
    "/v1/quotation/sectors": {
      "get": {
        "summary": "Get List of Sectors and activities",
        "tags": [
          "sectors-activities"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "./models/sector.v1.json"
              }
            }
          }
        },
        "description": "GET\n\nGet List of Sectors and activities by each one\n  Return list of Sector DTOs and inside each element list of activities DTO\n  For APC this list will be empty\n",
        "security": [
          {
            "API Key - 1": []
          }
        ],
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Accept-Language"
          },
          {
            "type": "string",
            "in": "header",
            "name": "email",
            "description": "broker email",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "./models/area.v1.json"
            }
          }
        ]
      },
      "parameters": []
    },
    "/v1/quotation/business-areas/{area}": {
      "post": {
        "summary": "Business area to start new project quotation",
        "responses": {
          "201": {
            "description": "Created new project",
            "schema": {
              "type": "object",
              "properties": {
                "projectId": {
                  "type": "integer"
                }
              }
            },
            "examples": {
              "example-1": {}
            }
          },
          "401": {
            "description": "Unauthorized, invalid token or email",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "description": "POST\n\nStart new quotation process with business area PSC.\n  1 For v.1 of this endpoint, area will be 'PSC' (if string locate id in business area entity (1))\n  2.Create new Project entitiy and set:\n    2.1 business area to value 1 PSC\n    2.2 id_user based on broker email in header request objet\n    2.3 id_state to value entity State - Draft (1) \n    2.4 id_screen to value entoty Screen - Activities (1) .\n    2.5 createdAt date to current day\n    2.6 id_souce to value entity Source - with slug 'api'\n    2.7 Return ProjectId created\n\n",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Accept-Language",
            "description": ""
          },
          {
            "type": "string",
            "in": "header",
            "name": "email",
            "description": "broker email",
            "required": true
          }
        ],
        "operationId": "\"1\"",
        "tags": [
          "areas"
        ]
      },
      "parameters": [
        {
          "type": "string",
          "name": "area",
          "in": "path",
          "required": true,
          "description": "area = 'psc'"
        }
      ]
    },
    "/v1/quotation/business-areas": {
      "get": {
        "summary": "Get Business Areas",
        "tags": [
          "areas"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "./models/area.v1.json"
              }
            }
          }
        },
        "description": "GET\n\nRetieve business areas\n  1. Return list of array for business areas DTO\n",
        "security": [
          {
            "API Key - 1": []
          }
        ],
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Accept-Language"
          },
          {
            "type": "string",
            "in": "header",
            "name": "email",
            "description": "broker email",
            "required": true
          }
        ]
      },
      "parameters": []
    },
    "/v1/quotation": {
      "post": {
        "summary": "Unique endpoint consolidate quotation creation",
        "tags": [
          "core"
        ],
        "responses": {
          "201": {
            "description": "Created quotation",
            "schema": {
              "type": "object",
              "properties": {}
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "description": "POST\n\nMain Core Quotation consolidation Post Endpoint\nIntegrate POST request in one endpoint to create quotation\n \n- POST /v1/quotation/business-areas/psc\n- PUT  /v1/quotation/project/{id}/activity/{activityId}\n- POST /v1/quotation/project/{id}/product-variants/\n- POST /v1/quotation/project/{id}/risk-data\n\n- POST /v1/quotation/project/{id}/cover-data/\n- POST /v1/quotation/project/{id}/premium/\n- POST /v1/quotation/project/{id}/customer-info/\n- POST /v1/quotation/project/{id}/period/{startDate}\n\nThis endpoint generated policy before to be approved (solicitud Emisión)\n",
        "security": [
          {
            "API Key - 1": []
          }
        ],
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Accept-Language"
          },
          {
            "type": "string",
            "in": "header",
            "name": "email",
            "description": "broker email",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "./models/apiquotationobject.v1.json"
            },
            "description": ""
          }
        ],
        "operationId": "1"
      },
      "parameters": []
    },
    "/v1/quotation/project/{id}/activity/{activityId}": {
      "parameters": [
        {
          "type": "integer",
          "name": "id",
          "in": "path",
          "required": true,
          "description": "projectId"
        },
        {
          "type": "integer",
          "name": "activityId",
          "in": "path",
          "required": true
        }
      ],
      "put": {
        "summary": "Update activity per project",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "PUT\n\nFind Project based on projectId path parameter\nIf project exist \n Update activity in Project based on activity path parameter\n Update project updatedAt field property\n\n",
        "security": [
          {
            "API Key - 1": []
          }
        ],
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Accept-Language"
          },
          {
            "type": "string",
            "in": "header",
            "name": "email",
            "description": "broker email",
            "required": true
          }
        ],
        "tags": [
          "sectors-activities"
        ]
      }
    },
    "/v1/quotation/project/{id}/document/{type}": {
      "parameters": [
        {
          "type": "integer",
          "name": "id",
          "in": "path",
          "required": true,
          "description": "projectId"
        },
        {
          "type": "string",
          "name": "type",
          "in": "path",
          "required": true,
          "description": "type = 'quote'"
        }
      ],
      "post": {
        "summary": "Store server quote document and retrieve",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "file": {
                  "$ref": "./models/document.v1.json"
                }
              },
              "required": [
                "file"
              ]
            }
          }
        },
        "description": "Getting document PDF based on type parameter \nThe process creates a quote policy file in server\n\n\n ",
        "security": [
          {
            "API Key - 1": []
          }
        ],
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Accept-Language"
          },
          {
            "type": "string",
            "in": "header",
            "name": "email",
            "description": "broker email",
            "required": true
          }
        ]
      }
    },
    "/v1/quotation/project/{id}/customer-info": {
      "get": {
        "summary": "Get customer and policy holder info",
        "tags": [
          "customer-info"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./models/customerdata.v1.json"
            }
          }
        },
        "security": [
          {
            "API Key - 1": []
          }
        ],
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Accept-Language"
          },
          {
            "type": "string",
            "in": "header",
            "name": "email",
            "description": "broker",
            "required": true
          },
          {
            "type": "integer",
            "in": "query",
            "name": "projectId",
            "required": true
          }
        ],
        "description": "GET\n\nget policy holder info based on project Id"
      },
      "post": {
        "summary": "Store policy holder information",
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "type": "object"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "./models/customerdata.v1.json"
            }
          },
          {
            "type": "string",
            "in": "header",
            "name": "Accept-Languge"
          },
          {
            "type": "string",
            "in": "header",
            "name": "email",
            "description": "broker email",
            "required": true
          }
        ],
        "description": "POST\n\npost policy holder info",
        "security": [
          {
            "API Key - 1": []
          }
        ]
      },
      "parameters": [
        {
          "type": "integer",
          "name": "id",
          "in": "path",
          "required": true,
          "description": "projectId"
        }
      ]
    },
    "/v1/quotation/project/{id}/premium": {
      "post": {
        "summary": "Store policy summary information",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "API Key - 1": []
          }
        ],
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Accept Language",
            "description": "API Language\n"
          },
          {
            "type": "string",
            "in": "header",
            "name": "email",
            "description": "broker email",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "./models/apiquotationobject.v1.json"
            }
          }
        ],
        "description": "POST\n\nPremium calculation based on payment method",
        "operationId": 5.2,
        "tags": [
          "premium"
        ]
      },
      "parameters": [
        {
          "type": "string",
          "name": "id",
          "in": "path",
          "required": true,
          "description": "projectId"
        }
      ],
      "get": {
        "summary": "Obtaining policy summary information",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./models/policysummary.v1.json"
            }
          }
        },
        "description": "GET \n\nObtaining Policy Premium based on payment information",
        "security": [
          {
            "API Key - 1": []
          }
        ],
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Accept-Language"
          },
          {
            "type": "string",
            "in": "header",
            "name": "email",
            "description": "broker email",
            "required": true
          }
        ],
        "tags": [
          "premium"
        ]
      }
    },
    "/v1/quotation/project/{id}/risk-data": {
      "parameters": [
        {
          "type": "string",
          "name": "id",
          "in": "path",
          "required": true,
          "description": "projecId"
        }
      ],
      "post": {
        "summary": "Create risk-data questions and answers",
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized, invalid token or email",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "security": [
          {
            "API Key - 1": []
          }
        ],
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Accept Language"
          },
          {
            "type": "string",
            "in": "header",
            "name": "email",
            "description": "Broker email",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "./models/apiquotationobject.v1.json"
            },
            "description": ""
          }
        ],
        "description": "POST\n\nFind Project based on project JSON request Body parameter\nIf project exist \n Store risk-data divided in question and answers in Json request object\n Return project Id updated\nelse\n  return error project not exist \n",
        "tags": [
          "risk-data"
        ],
        "operationId": 3.2
      },
      "get": {
        "summary": "Getting project risk-data",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./models/riskdata.v1.json"
            }
          }
        },
        "security": [
          {
            "API Key - 1": []
          }
        ],
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Accept-Language"
          },
          {
            "type": "string",
            "in": "header",
            "name": "email",
            "description": "broker email",
            "required": true
          }
        ],
        "description": "GET\n\nObtaining risk data based on project Id path parameter"
      }
    },
    "/v1/quotation/project/{id}/cover-data": {
      "get": {
        "summary": "Get cover-data based on projectId por product-variants",
        "tags": [
          "cover-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./models/coverdata.v1.json"
            }
          }
        },
        "security": [
          {
            "API Key - 1": []
          }
        ],
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Accept Language"
          },
          {
            "type": "string",
            "in": "header",
            "name": "email",
            "description": "Broker email",
            "required": true
          },
          {
            "type": "string",
            "in": "query",
            "name": "product-variants",
            "required": true
          }
        ],
        "description": "Getting cover data based on risk data info based on product variants list",
        "operationId": 4.1
      },
      "parameters": [
        {
          "type": "string",
          "name": "id",
          "in": "path",
          "required": true,
          "description": "projectId"
        }
      ],
      "post": {
        "summary": "",
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "type": "object"
            }
          }
        },
        "description": "Store cover data",
        "security": [
          {
            "API Key - 1": []
          }
        ],
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Accept Language"
          },
          {
            "type": "string",
            "in": "header",
            "name": "emal",
            "description": "broker email",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "./models/apiquotationobject.v1.json"
            }
          }
        ],
        "tags": [
          "cover-data"
        ],
        "operationId": 4.2
      }
    },
    "/v1/quotation/project/{id}/period/{startDate}": {
      "parameters": [
        {
          "type": "string",
          "name": "id",
          "in": "path",
          "required": true,
          "description": "projectId"
        },
        {
          "type": "string",
          "name": "startDate",
          "in": "path",
          "required": true,
          "description": "format yyyy-mm-dd"
        }
      ],
      "post": {
        "summary": "Finalize policy emition with start date",
        "tags": [
          "period"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "201": {
            "schema": {
              "$ref": "./models/apiquotationobject.v1.json"
            }
          }
        },
        "security": [
          {
            "API Key - 1": []
          }
        ],
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Accept-Language"
          },
          {
            "type": "string",
            "in": "header",
            "name": "email",
            "description": "broker email",
            "required": true
          }
        ],
        "description": "finalze policy emition with specifing period and create quote document"
      }
    },
    "/v1/quotation/project/{id}/finalize": {
      "parameters": [
        {
          "type": "string",
          "name": "id",
          "in": "path",
          "required": true,
          "description": "projectId"
        }
      ],
      "post": {
        "summary": "ending policy request",
        "tags": [
          "finalize"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "description": "POST\n\nFinalize project policy submition \n  fill bank information",
        "security": [
          {
            "API Key - 1": []
          }
        ],
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Accept-Language"
          },
          {
            "type": "string",
            "in": "header",
            "name": "email",
            "description": "broker email"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "./models/finalizeobject.v1.json"
            }
          }
        ]
      }
    }
  },
  "definitions": {},
  "securityDefinitions": {
    "API Key - 1": {
      "name": "API Key",
      "type": "apiKey",
      "in": "query",
      "description": "X-API-KEY"
    }
  }
}